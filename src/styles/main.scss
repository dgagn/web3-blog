@use 'config';
@use 'components';
@use 'config/breakpoints' as *;
@use 'config/spacing' as *;
@use 'config/colors' as *;
@use 'config/utils/container' as *;
@use 'pages/connexion';

@mixin clip-path($name: 'default', $offset: 50px) {
  @if $name == 'default' {
    clip-path: polygon(
      0% 0%,
      100% $offset,
      100% 100%,
      0% calc(100% - #{$offset})
    );
  } @else if $name == 'bottom' {
    clip-path: polygon(0% 0%, 100% 0%, 100% calc(100% - #{$offset}), 0% 100%);
  } @else {
    @error "Invalid clip-path name";
  }
}

::selection {
  color: #000;
  background-color: var(--color-primary-300);
}

.flex-column {
  flex-direction: column;
}

.justify-center {
  justify-content: center;
}

.spinner-container {
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
}

.spinner {
  width: 10em;
  height: 10em;
}

a {
  all: unset;
  &:hover {
    all: unset;
  }
}

.article-page {
  &__header {
    @include clip-path(bottom);
    padding: spacing-get('2xl');
    background-color: color-get('contrast', 100);
  }
}

.bg-blur {
  @include breakpoint(sm) {
    padding: spacing-get(xl);
  }
  background-color: transparentize(color-pure-get('contrast', 800), 0.7);
  border-radius: 16px;
}

.clip {
  @include clip-path(bottom);
}

.block {
  &:hover {
    display: block;
  }
}

.link {
  cursor: pointer;
  transition: 0.3s ease-in-out;
  color: var(--color-primary-500);

  &:hover {
    cursor: pointer;
    color: var(--color-primary-400);
    text-decoration: underline;
  }

  &--danger {
    color: var(--color-error-500);
    &:hover {
      color: var(--color-error-300);
    }
  }
}

.logo-size {
  display: flex;
  align-items: center;
  @include breakpoint('md', 'not all') {
    justify-content: center;
  }
  width: 118px;
  height: 64px;
}

.list {
  li {
    padding-bottom: spacing-get(sm);

    &::before {
      margin-right: spacing-get(sm);
      content: 'ðŸ”¹';
    }
  }
}

.max-h-md {
  max-height: 130px;
}
